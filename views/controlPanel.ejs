<!DOCTYPE html>
<html lang="id">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Energy Ease - Kontrol Panel</title>
    <style>
      @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
      :root {
        --primary-color: #3498db;
        --secondary-color: #2c3e50;
        --background-color: #f4f7f9;
        --card-bg-color: #ffffff;
        --text-color: #555;
        --light-text: #bdc3c7;
        --border-color: #e0e6ed;
        --shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
        --status-on: #27ae60;
        --status-off: #e74c3c;
        --button-on-hover: #219653;
        --button-off-hover: #c0392b;
      }
      body {
        font-family: 'Poppins', sans-serif;
        background-color: var(--background-color);
        margin: 0;
        display: flex;
        min-height: 100vh;
        color: var(--text-color);
        margin-left: 280px;
      }
      .main-content {
        flex: 1;
        padding: 30px;
        overflow-y: auto;
      }
      .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
        gap: 10px;
      }
      .header h1 {
        font-size: 32px;
        font-weight: 600;
        color: var(--secondary-color);
        margin: 0;
      }
      .testmode-btn {
        background: var(--primary-color);
        color: white;
        border: none;
        padding: 10px 16px;
        border-radius: 6px;
        cursor: pointer;
        font-weight: 500;
        transition: background 0.3s;
      }
      .testmode-btn.active {
        background: var(--status-on);
      }
      .section-title {
        font-size: 22px;
        font-weight: 600;
        color: var(--secondary-color);
        margin: 25px 0 15px;
      }
      .control-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 25px;
      }
      .control-card {
        background-color: var(--card-bg-color);
        border-radius: 12px;
        padding: 30px;
        box-shadow: var(--shadow);
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
      }
      .control-card img {
        width: 80px;
        height: auto;
        margin-bottom: 15px;
      }
      .control-card h3 {
        font-size: 20px;
        font-weight: 600;
        color: var(--secondary-color);
        margin: 0 0 10px 0;
      }
      .status-indicator {
        font-size: 14px;
        font-weight: 500;
        padding: 5px 15px;
        border-radius: 20px;
        color: white;
        margin-bottom: 20px;
      }
      .status-indicator.on {
        background-color: var(--status-on);
      }
      .status-indicator.off {
        background-color: var(--status-off);
      }
      .button-group {
        display: flex;
        gap: 10px;
        width: 100%;
        justify-content: center;
      }
      .button-group button {
        flex: 1;
        padding: 12px;
        font-size: 16px;
        font-weight: 500;
        color: white;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        transition: background-color 0.3s ease;
      }
      .button-group .button-on {
        background-color: var(--status-on);
      }
      .button-group .button-off {
        background-color: var(--status-off);
      }
      .button-group .button-on:hover {
        background-color: var(--button-on-hover);
      }
      .button-group .button-off:hover {
        background-color: var(--button-off-hover);
      }
      button:disabled {
        background-color: #ccc !important;
        color: #666 !important;
        cursor: not-allowed !important;
        opacity: 0.6;
      }
      .restriction-banner {
        background: #ffe6e6;
        border: 1px solid #ff4d4d;
        color: #c0392b;
        padding: 12px 20px;
        border-radius: 8px;
        margin-bottom: 20px;
        font-weight: 500;
        text-align: center;
      }
      .testmode-banner {
        background: #e8f7ed;
        border: 1px solid #27ae60;
        color: #27ae60;
        padding: 12px 20px;
        border-radius: 8px;
        margin-bottom: 20px;
        font-weight: 500;
        text-align: center;
        display: none;
      }
    </style>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  </head>
  <body>
    <%- include('partials/sidebar', { activePage: 'control' }) %>
    <div class="main-content">
      <div class="header">
        <h1>Kontrol Perangkat</h1>
        <button id="toggle-testmode" class="testmode-btn">
          Aktifkan Test Mode
        </button>
        <%- include('partials/logout') %>
      </div>

      <!-- Banner Test Mode -->
      <div id="testmode-banner" class="testmode-banner">
        ‚ö° Test Mode Aktif ‚Äî Semua pembatasan jam dinonaktifkan
      </div>

      <!-- Banner Pembatasan Jam -->
      <div
        id="restriction-notice"
        class="restriction-banner"
        style="display: none">
        ‚è∞ Kontrol tidak tersedia pada pukul 07.00 - 18.00 WIB
      </div>

      <!-- ================= AC ================= -->
      <div class="section-title">Kontrol AC</div>
      <div class="control-grid">
        <% ['ac1','ac2','ac3'].forEach((id,i)=> { %>
        <div class="control-card" id="device-<%= id %>">
          <img src="images/AC.png" alt="AC <%= i+1 %>" />
          <h3>AC <%= i+1 %></h3>
          <div class="status-indicator off" id="status-<%= id %>">OFF</div>
          <div class="button-group">
            <button
              class="button-on"
              onclick="publishMessage('<%= id %>','ON')">
              Hidupkan
            </button>
            <button
              class="button-off"
              onclick="publishMessage('<%= id %>','OFF')">
              Matikan
            </button>
          </div>
        </div>
        <% }) %>
      </div>

      <!-- ================= Relay ================= -->
      <div class="section-title">Kontrol Relay</div>
      <div class="control-grid">
        <% ['lampu1','lampu2','lampu3','lampu4','lampu5'].forEach((id,i)=> { %>
        <div class="control-card" id="device-<%= id %>">
          <img
            src="images/relay.png"
            alt="Relay <%= i+1 %>"
            onerror="this.src='images/relay.png'" />
          <h3>Relay <%= i+1 %></h3>
          <div class="status-indicator off" id="status-<%= id %>">OFF</div>
          <div class="button-group">
            <button
              class="button-on"
              onclick="publishMessage('<%= id %>','ON')">
              Hidupkan
            </button>
            <button
              class="button-off"
              onclick="publishMessage('<%= id %>','OFF')">
              Matikan
            </button>
          </div>
        </div>
        <% }) %>
      </div>
    </div>

    <!-- Script kontrol -->
    <script src="/socket.io/socket.io.js"></script>
    <script>
      const socket = io();
      let testingMode = false;

      // Ambil status awal dari server
      fetch('/api/testing-mode')
        .then((res) => res.json())
        .then((data) => {
          testingMode = data.testingMode;
          updateTestButton();
          updateButtonAvailability();
        });

      // Toggle Test Mode
      document
        .getElementById('toggle-testmode')
        .addEventListener('click', () => {
          const pin = prompt('üîí Masukkan PIN untuk toggle Test Mode:');
          if (!pin) return;
          fetch('/api/testing-mode/toggle', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ pin }),
          })
            .then((res) => {
              if (!res.ok) throw new Error('PIN salah atau request gagal');
              return res.json();
            })
            .then((data) => {
              testingMode = data.testingMode;
              updateTestButton();
              updateButtonAvailability();
            })
            .catch((err) => {
              alert('‚ùå Gagal toggle Test Mode: ' + err.message);
            });
        });

      function updateTestButton() {
        const btn = document.getElementById('toggle-testmode');
        const banner = document.getElementById('testmode-banner');
        if (testingMode) {
          btn.textContent = 'Matikan Test Mode';
          btn.classList.add('active');
          banner.style.display = 'block';
        } else {
          btn.textContent = 'Aktifkan Test Mode';
          btn.classList.remove('active');
          banner.style.display = 'none';
        }
      }

      function isRestrictedTime() {
        if (testingMode) return false;
        const hour = new Date().getHours();
        return hour >= 7 && hour < 18;
      }

      function updateButtonAvailability() {
        const buttons = document.querySelectorAll('.button-group button');
        const restrictionNotice = document.getElementById('restriction-notice');
        if (isRestrictedTime()) {
          buttons.forEach((btn) => btn.setAttribute('disabled', 'disabled'));
          restrictionNotice.style.display = 'block';
        } else {
          buttons.forEach((btn) => btn.removeAttribute('disabled'));
          restrictionNotice.style.display = testingMode ? 'none' : 'block';
        }
      }

      function publishMessage(deviceId, command) {
        socket.emit('command', { deviceId, command });
      }

      socket.on('device-status', ({ deviceId, status }) => {
        updateDeviceStatus(deviceId, status);
      });

      socket.on('command-rejected', ({ deviceId, command, reason }) => {
        alert(`‚õî Perintah '${command}' untuk ${deviceId} ditolak: ${reason}`);
      });

      function updateDeviceStatus(deviceId, status) {
        const statusElement = document.getElementById(`status-${deviceId}`);
        if (statusElement) {
          statusElement.textContent = status.toUpperCase();
          if (status.toUpperCase() === 'ON') {
            statusElement.classList.remove('off');
            statusElement.classList.add('on');
          } else {
            statusElement.classList.remove('on');
            statusElement.classList.add('off');
          }
        }
      }
    </script>
  </body>
</html>
